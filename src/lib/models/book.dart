// lib/models/book.dart
import 'package:hive/hive.dart';
import 'package:uuid/uuid.dart';

part 'book.g.dart'; // This line will be generated by build_runner

@HiveType(typeId: 1) // Unique typeId for BookFormat enum
enum BookFormat {
  @HiveField(0)
  epub,
  @HiveField(1)
  pdf,
  @HiveField(2)
  mobi,
  @HiveField(3)
  txt,
  @HiveField(4)
  html,
  @HiveField(5)
  unknown
}

@HiveType(typeId: 0) // Unique typeId for Book class
class Book extends HiveObject { // Extend HiveObject for easier management
  @HiveField(0)
  final String id;

  @HiveField(1)
  String title;

  @HiveField(2)
  String? author;

  @HiveField(3)
  String filePath; // Path to the actual book file in app's storage

  @HiveField(4)
  BookFormat format;

  @HiveField(5)
  String? coverImagePath; // Path to a cover image

  @HiveField(6)
  DateTime dateAdded;

  @HiveField(7)
  DateTime? lastRead;

  // --- Reading Progress related fields (can be a separate linked object later) ---
  @HiveField(8)
  double readingPercentage; // e.g., 0.0 to 1.0

  @HiveField(9)
  String? lastLocation; // e.g., EPUB CFI, PDF page number

  @HiveField(10)
  int? currentChapterIndex; // Index of the current chapter in the book

  // --- Other potential fields ---
  // @HiveField(10)
  // List<String> collectionIds; // IDs of collections this book belongs to

  // @HiveField(11)
  // List<String> bookmarkIds; // IDs of bookmarks associated with this book

  // @HiveField(12)
  // List<String> annotationIds; // IDs of annotations for this book

  Book({
    String? id,
    required this.title,
    this.author,
    required this.filePath,
    required this.format,
    this.coverImagePath,
    DateTime? dateAdded,
    this.lastRead,
    this.readingPercentage = 0.0,
    this.lastLocation,
    this.currentChapterIndex
  })  : id = id ?? const Uuid().v4(),
        dateAdded = dateAdded ?? DateTime.now();

  // No need for toJson/fromJson if primarily using Hive adapters,
  // but they can be useful for other purposes (like API calls).

  // You might add a convenience method to update progress:
  void updateReadingProgress({required double percentage, String? location}) {
    readingPercentage = percentage;
    lastLocation = location;
    if (this.isInBox) { // Check if the object is managed by Hive
      this.save(); // Save changes if it's a Hive-managed object
    }
  }
}